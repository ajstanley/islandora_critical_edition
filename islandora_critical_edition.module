<?php

/**
 * @file
 * This module is for managing critical editions of Islandora objects.
 */
define('ISLANDORA_CRITICAL_EDITION_USE_CWRC_WRITER', 'use CWRC');
define('ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER', 'edit CWRC');
define('ISLANDORA_CRITICAL_EDITION_CREATE_CRITICAL_EDITION', 'create critical edition');
define('ISLANDORA_CRITICAL_EDITION_DELETE_CRITICAL_EDITION', 'delete critical edition');
define('ISLANDORA_CRITICAL_EDITION_VIEW_CRITICAL_EDITION', 'view critical edition');
define('ISLANDORA_CRITICAL_EDITION_EDIT_TRANSCRIPTIONS', 'edit transcriptions');

// Relationships.
define('ISLANDORA_CRITICAL_EDITION_IS_CRITICAL_EDITION_OF', 'isCriticalEditionOf');

/**
 * Implements hook_menu().
 */
function islandora_critical_edition_menu() {
  $items['islandora/object/%islandora_object/critical_editions'] = array(
    'title' => 'Critical Editions',
    'page callback' => 'islandora_critical_edition_management',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_management_access',
    'access arguments' => array(2),
    'file' => 'includes/manage.inc',
  );

  $items['islandora/cwrcwriter/setup/%islandora_object'] = array(
    'title' => 'Cwrcwriter Setup',
    'page callback' => 'islandora_critical_edition_setup',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_cwrc_access',
    'access arguments' => array(3),
    'file' => 'includes/callbacks.inc',
  );
  $items['islandora/cwrcwriter/save_data/%islandora_object'] = array(
    'title' => 'Save Data',
    'page callback' => 'islandora_critical_edition_savedata',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_edit_cwrc_access',
    'access arguments' => array(3),
    'file' => 'includes/callbacks.inc',
  );
  $items['islandora/cwrcwriter/setup_canvas/%islandora_object'] = array(
    'title' => 'Shared Canvas Setup',
    'page callback' => 'islandora_critical_edition_canvas_setup',
    'page arguments' => array(3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_cwrc_access',
    'access arguments' => array(3),
    'file' => 'includes/callbacks.inc',
  );
  // Add new menu items to reflect new architecture.
  $items['islandora/object/%islandora_object/manage/edition_container'] = array(
    'title' => 'Critical Edition',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_container_management', 2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_container_management_access',
    'access arguments' => array(2),
    'file' => 'includes/container_management.inc',
  );
  $items['islandora/critical_edition/%islandora_object/associate'] = array(
    'title' => 'Associate Versionable Object',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_edition_attach_versionable', 2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_container_management_access',
    'access arguments' => array(2),
    'file' => 'includes/container_management.inc',
  );
  $items['islandora/critical_edition/%islandora_object/mvd'] = array(
    'title' => 'Create MVD',
    'page callback' => 'islandora_critical_create_mvd',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_critical_edition_container_management_access',
    'access arguments' => array(2),
    'file' => 'includes/calliope_interaction.inc',
  );
  $items['islandora/object/%islandora_object/manage/versionable_object'] = array(
    'title' => 'Versionable Object',
    'page callback' => 'islandora_versionable_object_management_menu',
    'page arguments' => array(2),
    'type' => MENU_LOCAL_TASK,
    'access callback' => 'islandora_versionable_object_management_access',
    'access arguments' => array(2),
    'file' => 'includes/versionable_object.inc',
  );

  $items['islandora/transcription/edit/%islandora_object'] = array(
    'title' => 'Edit Transcription',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_critical_transcription_edit_form', 3),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_transcription_object_management_access',
    'access arguments' => array(3),
    'file' => 'includes/transcriptions.inc',
  );
  $items['islandora/critical_apparatus/%islandora_object'] = array(
    'title' => 'Manage Critical Apparatus',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('critical_apparatus_form', 2),
    'type' => MENU_CALLBACK,
    'access callback' => 'islandora_critical_edition_container_management_access',
    'access arguments' => array(2),
    'file' => 'includes/critical_apparatus.inc',
  );
  
  return $items;
}

/**
 * Checks if the user has access to the CWRC editor for the given object.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_critical_edition_cwrc_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }

  $is_page = in_array('islandora:criticalEditionCModelPage', $object->models);

  return $is_page && islandora_object_access_callback(FEDORA_VIEW_OBJECTS, $object) && user_access(ISLANDORA_CRITICAL_EDITION_USE_CWRC_WRITER);
}

/**
 * Checks if the user has access to critical editions management on the object.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_critical_edition_management_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }

  $is_book = in_array('islandora:bookCModel', $object->models);

  return $is_book && (user_access(ISLANDORA_CRITICAL_EDITION_CREATE_CRITICAL_EDITION) ||
      user_access(ISLANDORA_CRITICAL_EDITION_DELETE_CRITICAL_EDITION) ||
      user_access(ISLANDORA_CRITICAL_EDITION_VIEW_CRITICAL_EDITION)) &&
      islandora_object_access_callback(FEDORA_VIEW_OBJECTS, $object);
}

/**
 * Checks if the user has access to critical edition container management.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_critical_edition_container_management_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }

  return in_array('islandora:criticalEditionContainerCModel', $object->models);
}

/**
 * Checks if the user has access to versionable objects.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_versionable_object_management_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }
  return in_array('islandora:versionableObjectCModel', $object->models);
}

/**
 * Checks if the user has access to versionable objects.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_transcription_object_management_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }
  return in_array('islandora:transcriptionCModel', $object->models);
}

/**
 * Checks to see if the user should have access save critical edition data.
 *
 * @param IslandoraFedora $object
 *   The object to determine functionality for.
 *
 * @return bool
 *   TRUE if the user has access.
 *   FALSE if the user doesn't have access.
 */
function islandora_critical_edition_edit_cwrc_access(AbstractObject $object = NULL) {
  if (is_null($object)) {
    return FALSE;
  }

  $is_page = in_array('islandora:criticalEditionCModelPage', $object->models);

  return $is_page && islandora_object_access_callback(FEDORA_VIEW_OBJECTS, $object) && user_access(ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER);
}

/**
 * Implements hook_permission().
 */
function islandora_critical_edition_permission() {
  return array(
    ISLANDORA_CRITICAL_EDITION_USE_CWRC_WRITER => array(
      'title' => t('Use CWRCWriter'),
      'description' => t('Access CWRCWriter.'),
    ),
    ISLANDORA_CRITICAL_EDITION_EDIT_WITH_CWRC_WRITER => array(
      'title' => t('Edit with CWRCWriter'),
      'description' => t('Edit and save content within CWRCWriter to objects in
        the repository. Note: Fedora XACML security policies may override this
        permission.'),
    ),
    ISLANDORA_CRITICAL_EDITION_CREATE_CRITICAL_EDITION => array(
      'title' => t('Create Critical Editions'),
      'description' => t('Create Critical Editions of Islandora Books.'),
    ),
    ISLANDORA_CRITICAL_EDITION_DELETE_CRITICAL_EDITION => array(
      'title' => t('Delete Critical Editions'),
      'description' => t('Delete Critical Editions of Islandora Books.'),
    ),
    ISLANDORA_CRITICAL_EDITION_VIEW_CRITICAL_EDITION => array(
      'title' => t('View Critical Editions'),
      'description' => t('View Critical Editions of Islandora Books.'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_critical_edition_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_critical_edition' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_critical_edition',
      'pattern' => 'islandora_critical_edition__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_versionable_object' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_versionable_object',
      'pattern' => 'islandora_versionable_object__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_transcription_object' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/islandora_transcription_object',
      'pattern' => 'islandora_transcription_object__',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_anno_list_pane' => array(
      'template' => drupal_get_path('module', 'islandora_image_annotation') . 'theme/islandora-list-pane',
    ),
    'islandora_anno_image_pane' => array(
      'template' => drupal_get_path('module', 'islandora_image_annotation') . 'theme/islandora-img-pane',
    ),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_criticalEditionCModel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_critical_edition', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_critical_edition_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_critical_edition');
  // Critical Edition Overview.
  $critical_edition_container_content_model = $connection->repository->constructObject('islandora:criticalEditionContainerCModel');
  $critical_edition_container_content_model->owner = 'fedoraAdmin';
  $critical_edition_container_content_model->label = 'Islandora Critical Edition Overview Content Model';
  $critical_edition_container_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_container_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_edition_container_ds_composite_model.xml", FALSE);
  $critical_edition_container_content_model->ingestDatastream($datastream);

  // Page Content Model.
  $critical_edition_page_content_model = $connection->repository->constructObject('islandora:criticalEditionCModelPage');
  $critical_edition_page_content_model->owner = 'fedoraAdmin';
  $critical_edition_page_content_model->label = 'Islandora Critical Edition Page Content Model';
  $critical_edition_page_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_page_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_crtitical_edition_page_ds_composite_model.xml", FALSE);
  $critical_edition_page_content_model->ingestDatastream($datastream);

  // Critical Edition Content Model.
  $critical_edition_content_model = $connection->repository->constructObject('islandora:criticalEditionCModel');
  $critical_edition_content_model->owner = 'fedoraAdmin';
  $critical_edition_content_model->label = 'Islandora Critical Edition Content Model';
  $critical_edition_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_edition_ds_composite_model.xml", FALSE);
  $critical_edition_content_model->ingestDatastream($datastream);

  // Versionable Object Content Model.
  $critical_edition_versionable_object_content_model = $connection->repository->constructObject('islandora:versionableObjectCModel');
  $critical_edition_versionable_object_content_model->owner = 'fedoraAdmin';
  $critical_edition_versionable_object_content_model->label = 'Islandora Versionable Object Content Model';
  $critical_edition_versionable_object_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_versionable_object_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_versionable_object_ds_composite_model.xml", FALSE);
  $critical_edition_versionable_object_content_model->ingestDatastream($datastream);
  // Critical Apparatus Content Model.
  $critical_edition_apparatus_content_model = $connection->repository->constructObject('islandora:criticalApparatusCModel');
  $critical_edition_apparatus_content_model->owner = 'fedoraAdmin';
  $critical_edition_apparatus_content_model->label = 'Islandora Critical Apparatus Content Model';
  $critical_edition_apparatus_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $critical_edition_apparatus_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_critical_apparatus_ds_composite_model.xml", FALSE);
  $critical_edition_apparatus_content_model->ingestDatastream($datastream);
  // Transcription Content Model.
  $transcription_content_model = $connection->repository->constructObject('islandora:transcriptionCModel');
  $transcription_content_model->owner = 'fedoraAdmin';
  $transcription_content_model->label = 'Islandora Critical Transcription Content Model';
  $transcription_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $transcription_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'M');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_transcription_ds_composite_model.xml", FALSE);
  $transcription_content_model->ingestDatastream($datastream);
  return array(
    'islandora_critical_edition' => array(
      'title' => 'Islandora critical editions',
      'objects' => array(
        $critical_edition_content_model,
        $critical_edition_page_content_model,
        $critical_edition_versionable_object_content_model,
        $critical_edition_container_content_model,
        $critical_edition_apparatus_content_model,
        $transcription_content_model,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function islandora_critical_edition_islandora_xml_form_builder_form_associations() {
  return array(
    'critical_edition_form_mods' => array(
      'content_model' => 'islandora:criticalEditionContainerCModel',
      'form_name' => 'Islandora Versionable Object Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
    'versionable_object_form_mods' => array(
      'content_model' => 'islandora:versionableObjectCModel',
      'form_name' => 'Islandora Versionable Object Form',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'template' => FALSE,
    ),
  );
}

/**
 * Implements hook_islandora_xml_form_builder_forms().
 */
function islandora_critical_edition_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_critical_edition');
  return array(
    'Islandora Versionable Object Form' => array('form_file' => "$module_path/data/forms/versionable_object_form_mods.xml"),
  );
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_versionableobjectcmodel_islandora_view_object($object, $page_number, $page_size) {
  module_load_include('inc', 'islandora_critical_edition', 'includes/utilities');
  $members = islandora_critical_edition_get_members($object->id);
  $output = theme('islandora_versionable_object', array('islandora_object' => $object, 'members' => $members));
  return array('' => $output);
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_critical_edition_islandora_transcriptioncmodel_islandora_view_object($object, $page_number, $page_size) {
  $output = theme('islandora_transcription_object', array('islandora_object' => $object));
  return array('' => $output);
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_critical_edition_islandora_criticalEditionContainerCModel_islandora_ingest_steps($form_state) {

  return array(
    'islandora_create_critical_edition' => array(
      'type' => 'callback',
      'weight' => 8,
      'module' => 'islandora_critical_edition',
      'do_function' => array(
        'function' => 'islandora_critical_edition_add_collection_properties',
        'args' => array($form_state),
      ),
      'undo_function' => array(
        'function' => 'islandora_critical_edition_remove_collection_properties',
        'args' => array($form_state),
      ),
    ),
  );
}

/**
 * Preps Critical Edition Objects and adds Apparatus object.
 *
 * @param array $form_state
 *   Drupal form state
 */
function islandora_critical_edition_add_collection_properties($form_state) {
  $fedora_object = $form_state['islandora']['objects'][0];
  $fedora_object->relationships->add(FEDORA_MODEL_URI, 'hasModel', 'islandora:collectionCModel');
  $collection_policy = $fedora_object->constructDatastream('COLLECTION_POLICY', 'X');
  $collection_policy->label = 'COLLECTION POLICY';
  $collection_policy->mimetype = 'text/xml';
  $path = drupal_get_path('module', 'islandora_critical_edition');
  $collection_policy->setContentFromFile("$path/xml/versionable_object_collection_policy.xml");
  $fedora_object->ingestDatastream($collection_policy);
  // Build Critical Apparatus.
  $tuque = new IslandoraTuque();
  $namespace = islandora_get_namespace($fedora_object->id);
  $apparatus = $tuque->repository->constructObject($namespace);
  $apparatus->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOf', $fedora_object->id);
  $apparatus->relationships->add(FEDORA_MODEL_URI, 'hasModel', 'islandora:criticalApparatusCModel');
  $apparatus->label = t("Critical Apparatus");
  $apparatus->owner = $fedora_object->owner;
  $tn_path = drupal_get_path('module', 'islandora_critical_edition') . '/images/apparatus.jpg';
  $tn = $apparatus->constructDatastream('TN');
  $tn->label = 'Thumbnail';
  $tn->setContentFromFile($tn_path);
  $apparatus->ingestDatastream($tn);
  $tuque->repository->ingestObject($apparatus);
}

/**
 * Controls access to management interface.
 *
 * @param AbstractObject $object
 *   Object to be examined
 * @param String $context
 *   Determines origin of function call
 *
 * @return boolean
 *   Access to path
 */
function islandora_critical_edition_object_management_access($object, $context) {
  if (is_null($object)) {
    return FALSE;
  }

  $content_models = $object->models;
  $access = FALSE;
  
   switch ($context) {
    case 'manage_apparatus':
      if (in_array('islandora:criticalApparatusCModel', $content_models)) {
        $access = TRUE;
        
      }
      break;

  }

  return $access;
}